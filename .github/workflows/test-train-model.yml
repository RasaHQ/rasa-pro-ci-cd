name: Test & Train Model
on:
  workflow_dispatch:
# on:
#   pull_request:
#     paths-ignore:
#     - "README.md"
#     - "Makefile"
#     - "Dockerfile"

jobs:
  lint-testing:
    name: Code Formatting Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: 3.10.15
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements-dev.txt
    - name: Code Formatting Tests
      working-directory: ${{ github.workspace }}
      run: |
        make lint
  # type-testing:
  #   name: Type Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.10.15
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install -U pip
  #       pip install -r requirements-dev.txt
  #   - name: Type Checking
  #     working-directory: ${{ github.workspace }}
  #     run: |
  #       make types
  training-testing:
    name: Training and Testing
    runs-on: ubuntu-latest
    needs: [lint-testing, type-testing]
    steps:
      - uses: actions/checkout@v1
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: set_training
        if: |
            contains(  steps.files.outputs.all, 'data/' )
            || contains(  steps.files.outputs.all, 'config.yml' )
        run: echo "RUN_TRAINING=true" >> $GITHUB_ENV
      - name: Rasa Train and Test GitHub Action
        if: env.RUN_TRAINING == 'true'
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          rasa_image: 'rasa/rasa-pro'
          rasa_version: '3.10.11'
          test_type: none
          data_validate: false
          cross_validation: false
          publish_summary: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload model
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@main
        with:
          name: model
          path: models
